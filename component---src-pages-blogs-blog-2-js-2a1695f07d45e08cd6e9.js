(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"31Ln":function(e,t,a){e.exports=a.p+"static/multiUbuntu10-9591ccb65e975be5ad8f02546aa9db33.png"},"3M87":function(e,t,a){e.exports=a.p+"static/multiUbuntu8-957ddd5b9c22fec014d76354bcececc8.png"},B4Jz:function(e,t,a){e.exports=a.p+"static/multiUbuntu7-19c7e4593eada6df8018cd29e31d64ad.png"},GuiL:function(e,t,a){e.exports=a.p+"static/multiUbuntu12-5d627e35f87682b3df4c4741af0e6a2b.png"},OJrV:function(e,t,a){e.exports=a.p+"static/multiUbuntu6-5d627e35f87682b3df4c4741af0e6a2b.png"},OKVN:function(e,t,a){e.exports=a.p+"static/multiUbuntu3-aad5d43125d2c4b7bf0d6db2c1ccb380.jpg"},Plru:function(e,t,a){e.exports=a.p+"static/multiUbuntu11-7cd85e3234a1dd993e6ea318830de072.png"},Sz05:function(e,t,a){e.exports=a.p+"static/multiUbuntu2-2d18022366141d8df40199850bc76cbb.png"},UOwq:function(e,t,a){e.exports=a.p+"static/multiUbuntu9-968f775a94d5fcbde81da3ce529f02b7.png"},WOy3:function(e,t,a){e.exports=a.p+"static/multiUbuntu4-1d490d880258e3a6a97139ff8c2e65a8.png"},ewju:function(e,t,a){e.exports=a.p+"static/multiUbuntu13-3a3298bf3dfd68114544d7d40224ee9d.jpg"},kkp5:function(e,t,a){"use strict";a.r(t);a("Wbzz"),a("q1tI");var s=a("z+Kk"),o=a.n(s),i=a("Sz05"),c=a.n(i),n=a("OKVN"),r=a.n(n),l=a("WOy3"),u=a.n(l),p=a("sPQ9"),m=a.n(p),d=a("OJrV"),b=a.n(d),h=a("B4Jz"),y=a.n(h),f=a("3M87"),g=a.n(f),w=a("UOwq"),k=a.n(w),O=a("31Ln"),j=a.n(O),x=a("Plru"),v=a.n(x),N=a("GuiL"),K=a.n(N),A=a("ewju"),U=a.n(A),T=a("qKvR");t.default=function(){return Object(T.a)("div",null,Object(T.a)("section",{id:"blog",className:"pt-10 pb-10"},Object(T.a)("div",{className:"container mx-auto"},Object(T.a)("div",{className:"text-center justify-between items-center"},Object(T.a)("div",{className:"row container mx-auto"},Object(T.a)("div",{className:"col-lg-24 col-md-24 pt-4"},Object(T.a)("div",{className:"card kbm-card"},Object(T.a)("div",{className:"card-header font-weight-bold"},Object(T.a)("h3",null,"Security Policy deployment in MultiUbuntu with KubeArmor")),Object(T.a)("div",{className:"card-body font-weight-normal"},Object(T.a)("p",{style:{textAlign:"left"}},"KubeArmor, a container-aware runtime security enforcement system, developed by Accuknox helps in auditing and blocking any malicious access performed on containers. It not only restricts the behavior of the container at the system level but also blocks access to it and generates audit logs, and automatically sends them to the system. KubeArmor allows operators to define security policies and apply them to Kubernetes. Then, KubeArmor will automatically detect the changes in security policies from Kubernetes and enforce them to the corresponding containers and nodes. If there are any violations against security policies, KubeArmor immediately generates alerts with container identities. If operators have any logging systems, it automatically sends the alerts to their systems as well. To deploy Multiubuntu microservice, the steps are to be followed. These are the sample security policies for multiubuntu deployment."," ",Object(T.a)("a",{href:"https://github.com/kubearmor/KubeArmor/tree/master/examples/multiubuntu",target:"_blank",style:{color:"#007bff"}},"Security policies"),Object(T.a)("img",{className:"w-100 pt-3",src:o.a}),Object(T.a)("h4",{className:"mt-3"},"Example 1 - Block a process execution:"),"In this example, the sleep command can be blocked by applying a security policy. Let us see how it works before and after applying the security policy. The picture below shows that the sleep command is working.",Object(T.a)("img",{className:"w-100 pt-3",src:c.a}),"This is the yaml policy to be applied to block the sleep command.",Object(T.a)("img",{className:"w-100 pt-3",src:r.a}),"To apply the policy the following command should be given. Here we can see that the kubearmor ksp-group-1-proc-path-block.yaml policy is applied.",Object(T.a)("img",{className:"w-100 pt-3",src:u.a}),"To check if the sleep command is blocked, Execute sleep command inside the ubuntu-1 pod. Replace the appropriate pod name for ubuntu 1.",Object(T.a)("img",{className:"w-100 pt-3",src:m.a}),"Here you can see the permission is denied. To check for audit logs, replace KubeArmor in the node where ubuntu-1 is located.",Object(T.a)("img",{className:"w-100 pt-3",src:b.a}),Object(T.a)("img",{className:"w-100 pt-3",src:y.a}),Object(T.a)("h4",{className:"mt-3"},"Example 2 - Block file access:"),"Another example is to block a specific directory and the subdirectories. In this example, the credentials directory contains sensitive information. Here we can access the password text file and can view the username and password.",Object(T.a)("img",{className:"w-100 pt-3",src:g.a}),"Let us see how to apply a policy and how to block this directory. This is the yaml policy to be applied to block access to sensitive information.",Object(T.a)("img",{className:"w-100 pt-3",src:k.a}),"To apply the policy the following command should be given. Here we can see that the kubearmor ksp-ubuntu-5-file-dir-recursive-block.yaml policy is applied.",Object(T.a)("img",{className:"w-100 pt-3",src:j.a}),"To check if the password text file is blocked, Let us try to access Access /credentials/password inside of the ubuntu-5 pod.",Object(T.a)("img",{className:"w-100 pt-3",src:v.a}),"Here, the permission is denied when we try to view the password text file. To check audit logs, replace KubeArmor in the node where Ubuntu 5 is located.",Object(T.a)("img",{className:"w-100 pt-3",src:K.a}),Object(T.a)("img",{className:"w-100 pt-3",src:U.a}),Object(T.a)("h4",{className:"mt-3"},"Setting kubeArmor up on Kubernetes"),"Prerequisite: We need a working Kubernetes setup for this. We can use a cloud Kubernetes offering GCP or set yourself locally using minikube. If you are using minikube then we also require kubectl. The daemon-set has to be installed as part of the kube-system namespace thus giving it the rights to watch all the system events. Commands to install: Step #1: Deploy kubearmor for GKE: kubectl apply -f https://raw.githubusercontent.com/kubearmor/KubeArmor/master/deployments/GKE/kubearmor.yaml After a second kubeArmor should be running, to verify, you will see the pods you created in a moment. Before applying the security policy to the container or pod the annotations should be added to the deployment, under the metadata Sample deployment with annotations Here is an example of a security policy which is to block a process execution of the sleep command. When you apply the policy it will block this particular command, we can get the audit logs of that security policy. KubeArmor Security Policy to block sleep command in containers during runtime Find more about this on “Sample deployment of Multiubuntu with KubeArmor”",Object(T.a)("h4",{className:"mt-3"},"Conclusion"),"In this blog, we looked at the basics of Kubernetes security monitoring and how to set up the kubeArmor on Kubernetes which automatically detects the changes in security policies and enforces them on the respective containers without any human intervention, and sends the audit logs to their system admins.")))))))))}},sPQ9:function(e,t,a){e.exports=a.p+"static/multiUbuntu5-cdabb5d2eb67037d42784cbee79a7f15.png"},"z+Kk":function(e,t,a){e.exports=a.p+"static/multiUbuntu1-c74606634949258988e17d000831505e.png"}}]);
//# sourceMappingURL=component---src-pages-blogs-blog-2-js-2a1695f07d45e08cd6e9.js.map